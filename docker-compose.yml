version: "3.9"

services:
  tradingportal:
    build:
      context: ./src/TradingPortal
      dockerfile: Dockerfile
      args:
        APP_UID: ${APP_UID}
    container_name: yourbank_tradingportal
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5000:80"

  tradinggateway:
    build:
      context: ./src/ApiGateway
      dockerfile: Dockerfile
      args:
        APP_UID: ${APP_UID}
    container_name: yourbank_tradinggateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5001:80"

  identityservice:
    build:
      context: ./src/IdentityService
      dockerfile: Dockerfile
      args:
        APP_UID: ${APP_UID}
    container_name: yourbank_identityservice
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    ports:
      - "5002:80"

  # pricingengine:
  #   build:
  #     context: ./src/PricingEngineService
  #     dockerfile: Dockerfile
  #     args:
  #       APP_UID: ${APP_UID}
  #   container_name: yourbank_pricingengine
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Production
  #   ports:
  #     - "5003:80"

  # ordermanagement:
  #   build:
  #     context: ./src/OrderManagementService
  #     dockerfile: Dockerfile
  #     args:
  #       APP_UID: ${APP_UID}
  #   container_name: yourbank_ordermanagement
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Production
  #   ports:
  #     - "5004:80"

  # orderexecution:
  #   build:
  #     context: ./src/Infrastructure.OrderExecution
  #     dockerfile: Dockerfile
  #     args:
  #       APP_UID: ${APP_UID}
  #   container_name: yourbank_orderexecution
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Production
  #   ports:
  #     - "5005:80"

  # postexecutionmonitoring:
  #   build:
  #     context: ./src/PostExecutionMonitoringService
  #     dockerfile: Dockerfile
  #     args:
  #       APP_UID: ${APP_UID}
  #   container_name: yourbank_postexecutionmonitoring
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Production
  #   ports:
  #     - "5006:80"
