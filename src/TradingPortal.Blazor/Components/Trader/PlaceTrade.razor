@page "/trader/place-trade"

<PageTitle>New Trade</PageTitle>

<div class="card shadow-sm p-4 mt-3">
    <h2 class="text-primary">📈 Place a New Trade</h2>

    <EditForm Model="trader.PlaceTrade.InputModel" OnValidSubmit="PlaceTradeClick">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" />

        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">Instrument</label>
                <InputText @bind-Value="trader.PlaceTrade.InputModel.Instrument" class="form-control" />
                <ValidationMessage For="@(() => trader.PlaceTrade.InputModel.Instrument)" />
            </div>

            <div class="col-md-3">
                <label class="form-label">Side</label>
                <InputSelect @bind-Value="trader.PlaceTrade.InputModel.Side" class="form-select">
                    <option value="Buy">Buy</option>
                    <option value="Sell">Sell</option>
                </InputSelect>
            </div>

            <div class="col-md-3">
                <label class="form-label">Quantity</label>
                <InputNumber @bind-Value="trader.PlaceTrade.InputModel.Quantity" class="form-control" />
                <ValidationMessage For="@(() => trader.PlaceTrade.InputModel.Quantity)" />
            </div>

            <div class="col-md-4">
                <label class="form-label">Order Type</label>
                <InputSelect @bind-Value="trader.PlaceTrade.InputModel.OrderType" class="form-select">
                    <option value="Market">Market</option>
                    <option value="Limit">Limit</option>
                    <option value="Stop">Stop</option>
                    <option value="StopLimit">Stop-Limit</option>
                </InputSelect>
            </div>

            @if (trader.PlaceTrade.InputModel.OrderTypeIsNotMarket) {
                <div class="col-md-4">
                    <label class="form-label">Price</label>
                    <InputNumber @bind-Value="trader.PlaceTrade.InputModel.Price" class="form-control" />
                    <ValidationMessage For="@(() => trader.PlaceTrade.InputModel.Price)" />
                </div>
            }

            <div class="col-md-4">
                <label class="form-label">Time In Force</label>
                <InputSelect @bind-Value="trader.PlaceTrade.InputModel.TimeInForce" class="form-select">
                    <option value="Day">Day</option>
                    <option value="GTC">GTC</option>
                    <option value="IOC">IOC</option>
                </InputSelect>
            </div>

            <div class="col-md-6">
                <label class="form-label">Strategy Tag</label>
                <InputText @bind-Value="trader.PlaceTrade.InputModel.StrategyCode" class="form-control" />
            </div>

            <div class="col-md-6">
                <label class="form-label">Portfolio ID</label>
                <InputText @bind-Value="trader.PlaceTrade.InputModel.PortfolioCode" class="form-control" />
            </div>

            <div class="col-md-12">
                <label class="form-label">User Notes</label>
                <InputTextArea @bind-Value="trader.PlaceTrade.InputModel.UserComment" class="form-control" rows="2" />
            </div>

            <div class="col-md-6">
                <label class="form-label">Requested Execution Time (UTC)</label>
                <InputDate @bind-Value="trader.PlaceTrade.InputModel.ExecutionRequestedFor" class="form-control" />
            </div>
        </div>

        <div class="mt-4 text-end">
            <button class="btn btn-success px-4" type="submit">💼 Submit Trade</button>
        </div>
    </EditForm>

    @if (trader.PlaceTrade.ViewModel.Errors != null && trader.PlaceTrade.ViewModel.Errors.Any()) {
        <div class="alert alert-danger mt-4">
            <ul>
                @foreach (var error in trader.PlaceTrade.ViewModel.Errors) {
                    <li>@error</li>
                }
            </ul>
        </div>
    }

    @if (!string.IsNullOrWhiteSpace(trader.PlaceTrade.ViewModel.Result)) {
        <div class="alert @trader.PlaceTrade.ViewModel.AlertCssClass mt-4">@trader.PlaceTrade.ViewModel.Result</div>
    }



</div>

<div class="d-flex justify-content-between align-items-center mt-5 mb-2">
    <h5 class="text-secondary">📋 Trade Filters</h5>
    <div class="d-flex gap-2">
        <InputDate @bind-Value="trader.FindTrades.InputModel.FromDate" class="form-control form-control-sm" style="width: 160px" />
        <InputDate @bind-Value="trader.FindTrades.InputModel.ToDate" class="form-control form-control-sm" style="width: 160px" />
        <InputText @bind-Value="trader.FindTrades.InputModel.Instrument" class="form-control form-control-sm" style="width: 150px" placeholder="Instrument" />
        <InputSelect @bind-Value="trader.FindTrades.InputModel.Side" class="form-select form-select-sm" style="width: 120px">
            <option value="">All</option>
            <option value="Buy">Buy</option>
            <option value="Sell">Sell</option>
            <option value="null">Null</option>
        </InputSelect>
        <button class="btn btn-sm btn-outline-secondary" @onclick="TradesFilterClick">Apply</button>
    </div>


</div>

<div class="card shadow-sm p-4 mt-3">
    @if (trader.FindTrades.ViewModel.Errors != null && trader.FindTrades.ViewModel.Errors.Any()) {
        <div class="alert alert-danger mt-4">
            <ul>
                @foreach (var error in trader.FindTrades.ViewModel.Errors) {
                    <li>@error</li>
                }
            </ul>
        </div>
    }
    <table class="table table-sm table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Instrument</th>
                <th>Side</th>
                <th>Qty</th>
                <th>Type</th>
                <th>Price</th>
                <th>Time</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var trade in trader.FindTrades.ViewModel.Trades.Rows) {
                <tr>
                    <td>@trade.Id</td>
                    <td>@trade.Instrument</td>
                    <td>@trade.Side</td>
                    <td>@trade.Quantity</td>
                    <td>@trade.OrderType</td>
                    <td>@(trade.Price?.ToString("F2") ?? "-")</td>
                    <td>@trade.SubmittedAt.ToString("u")</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="mt-2 text-muted small">
        <strong>Total:</strong> @trader.FindTrades.ViewModel.Trades.Rows.Count |
        <strong>Buy:</strong> @trader.FindTrades.ViewModel.BuyCount |
        <strong>Sell:</strong> @trader.FindTrades.ViewModel.SellCount
    </div>
</div>